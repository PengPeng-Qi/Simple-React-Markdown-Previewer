{"version":3,"sources":["redux/actions/Editor.js","components/Preview/index.jsx","components/Editor/index.jsx","App.jsx","redux/reducers/Editor.js","redux/store.js","index.js"],"names":["EditorAction","data","type","PreviewUI","id","dangerouslySetInnerHTML","__html","marked","this","props","Component","connect","EditorUI","changeText","Node","value","cols","rows","onChange","ref","c","App","Editor","initState","createStore","preState","action","ReactDOM","render","store","document","getElementById"],"mappings":"kQAAaA,EAAe,SAACC,GAAD,MAAW,CACrCC,KAAM,aACND,S,gCCIIE,E,4JACJ,WACE,OACE,8BACE,qBAAKC,GAAG,UAAUC,wBAAyB,CAAEC,OAAQC,IAAOC,KAAKC,MAAMR,e,GAJvDS,aAYTC,eACb,SAACV,GAAD,MAAW,CAAEA,UACb,CAAED,gBAFWW,CAGbR,GCjBIS,E,4MAIJC,WAAa,WACX,EAAKJ,MAAMT,aAAa,EAAKc,KAAKC,Q,uDAJpC,WACEP,KAAKM,KAAKC,MAAQP,KAAKC,MAAMR,O,oBAK/B,WAAU,IAAD,OACP,OACE,8BACE,0BAAUG,GAAG,SAASY,KAAK,KAAKC,KAAK,KAAKC,SAAUV,KAAKK,WAAYM,IAAK,SAAAC,GAAC,OAAI,EAAKN,KAAOM,W,GAV5EV,aAiBRC,eACb,SAACV,GAAD,MAAW,CAAEA,UACb,CAAED,gBAFWW,CAGbC,GCnBmBS,G,kKACnB,WACE,OACE,sBAAKjB,GAAG,SAAR,UACE,cAAC,EAAD,IACA,cAACkB,EAAD,W,GALyBZ,c,QCL3Ba,EAAS,ovCCIAC,mBDyCA,WAAsD,IAA/BC,EAA8B,uDAAnBF,EAAWG,EAAQ,uCAC3DxB,EAAcwB,EAAdxB,KAAMD,EAAQyB,EAARzB,KAEb,MACO,eADCC,EAEGD,EAEAwB,KE9CbE,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MACWC,SAASC,eAAe,W","file":"static/js/main.7921a1f2.chunk.js","sourcesContent":["export const EditorAction = (data) => ({\n  type: 'changeText',\n  data\n})","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { EditorAction } from '../../redux/actions/Editor'\nimport './index.css'\nimport marked from 'marked'\n\nclass PreviewUI extends Component {\n  render() {\n    return (\n      <div>\n        <div id='preview' dangerouslySetInnerHTML={{ __html: marked(this.props.data) }}>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(\n  (data) => ({ data }),\n  { EditorAction }\n)(PreviewUI)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { EditorAction } from '../../redux/actions/Editor'\n\nclass EditorUI extends Component {\n  componentDidMount(){\n    this.Node.value = this.props.data\n  }\n  changeText = () => {\n    this.props.EditorAction(this.Node.value);\n  }\n  render() {\n    return (\n      <div>\n        <textarea id=\"editor\" cols=\"60\" rows=\"25\" onChange={this.changeText} ref={c => this.Node = c}>\n        </textarea>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (data) => ({ data }),\n  { EditorAction }\n)(EditorUI)","import React, { Component } from 'react'\nimport Preview from './components/Preview'\nimport Editor from './components/Editor'\nimport './App.css'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div id='Father'>\n        <Preview></Preview>\n        <Editor></Editor>\n      </div>\n    )\n  }\n}\n","const initState = `\n  # Welcome to my React Markdown Previewer!\n\n  ## This is a sub-heading...\n  ### And here's some other cool stuff:\n\n  Heres some code, \\`<div ></div> \\`, between 2 backticks.\n\n  \\`\\`\\`\n      // this is multi-line code:\n\n      function anotherExample(firstLine, lastLine) {\n        if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n          return multiLineCode;\n        }\n      }\n  \\`\\`\\`\n\n  You can also make text **bold**... whoa!\n  Or _italic_.\n  Or... wait for it... **_both!_**\n  And feel free to go crazy ~~crossing stuff out~~.\n\n  There's also [links](https://www.freecodecamp.org), and\n  > Block Quotes!\n\n  And if you want to get really crazy, even tables:\n\n  Wild Header | Crazy Header | Another Header?\n  ------------ | ------------- | -------------\n  Your content can | be here, and it | can be here....\n  And here. | Okay. | I think we get it.\n\n  - And of course there are lists.\n    - Some are bulleted.\n      - With different indentation levels.\n          - That look like this.\n\n\n  1. And there are numbered lists too.\n  1. Use just 1s if you want!\n  1. And last but not least, let's not forget embedded images:\n\n  ![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n  `\nexport default function editorReducer(preState = initState, action) {\n  const {type, data} = action\n\n  switch (type) {\n    case 'changeText':\n      return data;\n    default:\n      return preState\n  }\n}","import {createStore} from 'redux'\n\nimport editorReducer from './reducers/Editor'\n\nexport default createStore(editorReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}